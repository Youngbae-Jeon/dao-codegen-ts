import { Generation } from "../config";
import { InterfaceCodeGenerator } from "./InterfaceCodeGenenerator";
import { JsCoder } from "./JsCoder";
import { ModulesCoder } from "./ModulesCoder";
import { Table } from "./table";
import { upperCamelCase } from "./utils";

export class TsCodeGenerator {
	private name: string;

	constructor(private table: Table, private options?: Generation['ts']) {
		this.name = upperCamelCase(`${options?.dataTypeName?.prefix || ''}_${table.modelName || table.name}_${options?.dataTypeName?.suffix || ''}`);
	}

	generate(): { name: string, content: string } {
		const modules = new ModulesCoder();

		const interfaceLines = new InterfaceCodeGenerator(this.table, this.options).generate(modules);

		const js = new JsCoder();
		this.writeHeader(js);

		const lines = modules.toString();
		if (lines) {
			js.add(lines);
			js.add('');
		}

		if (interfaceLines.length) {
			js.add(...interfaceLines);
		}

		return {
			name: this.name,
			content: js.toString()
		}
	}

	private writeHeader(js: JsCoder) {
		js.add(`
		// DO NOT EDIT THIS FILE:
		// This file is generated by dao-codegen-ts.
		`);
		js.add('');
	}

}	