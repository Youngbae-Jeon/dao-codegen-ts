const expect = require('chai').expect;
const { generateCodes } = require('../../dist/cli/generate');

describe('복합키 모델 테스트', () => {
	const model = {
		table: 'product_variant',
		title: '품목정보',
		columns: {
			product_no: {
				title: '상품번호',
				type: 'int unsigned'
			},
			variant_no: {
				title: '품목번호',
				type: 'int unsigned'
			},
			color: {
				title: '색상',
				type: 'char(20)'
			},
			size: {
				title: '사이즈',
				type: 'char(10)'
			}
		},
		primaryKey: ['product_no', 'variant_no']
	};

	it('인터페이스가 정상적으로 생성되어야 함', async () => {
		const generated = await generateCodes(model, {
			files: ['product_variant.yaml'],
			interface: {
				output: {
					dir: '/tmp/dao-codegen-ts'
				}
			}
		});
		expect(generated).to.have.property('interface');
		expect(generated.interface).to.have.property('name', 'ProductVariant');
		expect(generated.interface).to.have.property('content', `
// DO NOT EDIT THIS FILE:
// This file is generated by dao-codegen-ts.

export interface ProductVariantData {
	/** 색상 */
	color?: string | null;
	/** 사이즈 */
	size?: string | null;
}

/** 품목정보 */
export interface ProductVariant extends ProductVariantData {
	/** 상품번호 */
	productNo: number;
	/** 품목번호 */
	variantNo: number;
}
`.trimLeft()
		);
	});
});